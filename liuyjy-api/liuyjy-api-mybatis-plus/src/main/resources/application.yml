#app
server:
  port: 8586
  # 配置Tomcat编码,默认为UTF-8
  tomcat:
    uri-encoding: UTF-8
    # 配置最大线程数
    max-threads: 500
    max-connections: 800

#spring
spring:

  # JDBC 配置(驱动类自动从url的mysql识别,数据源类型自动识别)
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 使用druid数据源
    druid:
      driver-class-name: com.mysql.jdbc.Driver
#############################################数据源1###################################################################
      dbmaster:
        url: jdbc:mysql://192.168.1.31:3306/AladdinMagic?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
        username: java
        password: wdkj@isgala.com
        #连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
        # 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
        #removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)
        #初始化连接，连接池启动时创建的初始化连接数量（默认值为0）
        initial-size: 1
        #最大活动连接，连接池中可同时连接的最大的连接数（默认值为8）
        max-active: 8
        #最小空闲连接，连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，该参数越接近maxIdle，性能越好
        min-idle: 1
        # 配置获取连接等待超时的时间
        max-wait: 5000
        #打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 50
        #spring.datasource.druid.max-open-prepared-statements=和上面的等价
        #用来检测连接是否有效的sql，要求是一个查询语句
        validation-query: SELECT 'x'
        #spring.datasource.druid.validation-query-timeout=
        #申请连接的时候检测
        #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
        test-on-borrow: false
        #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
        test-on-return: false
        #申请连接的时候检测
        test-while-idle: true
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 90000
        #配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        #spring.datasource.druid.max-evictable-idle-time-millis=
        #配置多个英文逗号分隔
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
        #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
        #filters: config,stat,wall,log4j
        filters: config,stat,logback
        # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
        #是否启用StatFilter默认值true
        web-stat-filter:
          enabled: true
          url-pattern: /*
          #  exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
          session-stat-enable: false
          session-stat-max-count: 1000
          principal-session-name: admin
          principal-cookie-name: admin
          profile-enable: true
        # StatViewServlet配置
        #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
        #是否启用StatViewServlet默认值true
        stat-view-servlet:
          enabled: true
          #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
          #http://110.76.43.235:9000/druid/index.html
          #http://110.76.43.235:8080/mini-web/druid/index.html
          url-pattern: /druid/*
          #允许清空统计数据
          reset-enable: true
          login-username: admin
          login-password: admin
        #StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
        #deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
        #配置的格式
        #<IP>
        #或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
        #24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
        #stat-view-servlet.allow=
        #stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

        # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
        #aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
###################################################数据源2##############################################################
      dbslave1:
        url: jdbc:mysql://192.168.1.31:3306/alaApp?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
        username: java
        password: wdkj@isgala.com
        #连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
        # 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
        #removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)
        #初始化连接，连接池启动时创建的初始化连接数量（默认值为0）
        initial-size: 1
        #最大活动连接，连接池中可同时连接的最大的连接数（默认值为8）
        max-active: 8
        #最小空闲连接，连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，该参数越接近maxIdle，性能越好
        min-idle: 1
        # 配置获取连接等待超时的时间
        max-wait: 5000
        #打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 50
        #spring.datasource.druid.max-open-prepared-statements=和上面的等价
        #用来检测连接是否有效的sql，要求是一个查询语句
        validation-query: SELECT 'x'
        #spring.datasource.druid.validation-query-timeout=
        #申请连接的时候检测
        #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
        test-on-borrow: false
        #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
        test-on-return: false
        #申请连接的时候检测
        test-while-idle: true
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 90000
        #配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        #spring.datasource.druid.max-evictable-idle-time-millis=
        #配置多个英文逗号分隔
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
        #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
        #filters: config,stat,wall,log4j
        filters: config,stat,logback
        # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
        #是否启用StatFilter默认值true
        web-stat-filter:
          enabled: true
          url-pattern: /*
          #  exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
          session-stat-enable: false
          session-stat-max-count: 1000
          principal-session-name: admin
          principal-cookie-name: admin
          profile-enable: true
        # StatViewServlet配置
        #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
        #是否启用StatViewServlet默认值true
        stat-view-servlet:
          enabled: true
          #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
          #http://110.76.43.235:9000/druid/index.html
          #http://110.76.43.235:8080/mini-web/druid/index.html
          url-pattern: /druid/*
          #允许清空统计数据
          reset-enable: true
          login-username: admin
          login-password: admin
        #StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
        #deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
        #配置的格式
        #<IP>
        #或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
        #24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
        #stat-view-servlet.allow=
        #stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

        # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
        #aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
#######################################################################################################################


#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  #typeAliasesPackage: com.example.entity
  #typeEnumsPackage: com.example.enums
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false  #二级缓存
    # mybatis-plus.configuration.cache-enabled=true

#日志输出级别
logging:
  level:
    root: info
    org:
      springframework: info
      org:
        mybatis: info
    com.tool: info
  pattern:
    console: '%boldYellow(%d{yyyy-MM-dd HH:mm:ss}) %boldMagenta([%thread]) %green(%-5level) %highlight(%logger{10}) - %red(%msg%n)'

